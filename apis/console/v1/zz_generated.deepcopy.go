//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DateTimeMatcher) DeepCopyInto(out *DateTimeMatcher) {
	*out = *in
	if in.Before != nil {
		in, out := &in.Before, &out.Before
		*out = (*in).DeepCopy()
	}
	if in.After != nil {
		in, out := &in.After, &out.After
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DateTimeMatcher.
func (in *DateTimeMatcher) DeepCopy() *DateTimeMatcher {
	if in == nil {
		return nil
	}
	out := new(DateTimeMatcher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceMatcher) DeepCopyInto(out *DeviceMatcher) {
	*out = *in
	if in.IS != nil {
		in, out := &in.IS, &out.IS
		*out = new(string)
		**out = **in
	}
	if in.Approved != nil {
		in, out := &in.Approved, &out.Approved
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceMatcher.
func (in *DeviceMatcher) DeepCopy() *DeviceMatcher {
	if in == nil {
		return nil
	}
	out := new(DeviceMatcher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownstreamTLS) DeepCopyInto(out *DownstreamTLS) {
	*out = *in
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.CA != nil {
		in, out := &in.CA, &out.CA
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownstreamTLS.
func (in *DownstreamTLS) DeepCopy() *DownstreamTLS {
	if in == nil {
		return nil
	}
	out := new(DownstreamTLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderValueOption) DeepCopyInto(out *HeaderValueOption) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Append != nil {
		in, out := &in.Append, &out.Append
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderValueOption.
func (in *HeaderValueOption) DeepCopy() *HeaderValueOption {
	if in == nil {
		return nil
	}
	out := new(HeaderValueOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheck) DeepCopyInto(out *HealthCheck) {
	*out = *in
	out.Timeout = in.Timeout
	out.Interval = in.Interval
	if in.InitialJitter != nil {
		in, out := &in.InitialJitter, &out.InitialJitter
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.IntervalJitter != nil {
		in, out := &in.IntervalJitter, &out.IntervalJitter
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.IntervalJitterPercent != nil {
		in, out := &in.IntervalJitterPercent, &out.IntervalJitterPercent
		*out = new(uint32)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(uint32)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(uint32)
		**out = **in
	}
	if in.ReuseConnection != nil {
		in, out := &in.ReuseConnection, &out.ReuseConnection
		*out = new(bool)
		**out = **in
	}
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = new(HealthCheckHTTP)
		(*in).DeepCopyInto(*out)
	}
	if in.NoTrafficInterval != nil {
		in, out := &in.NoTrafficInterval, &out.NoTrafficInterval
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.NoTrafficHealthyInterval != nil {
		in, out := &in.NoTrafficHealthyInterval, &out.NoTrafficHealthyInterval
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.UnhealthyInterval != nil {
		in, out := &in.UnhealthyInterval, &out.UnhealthyInterval
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.UnhealthyEdgeInterval != nil {
		in, out := &in.UnhealthyEdgeInterval, &out.UnhealthyEdgeInterval
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.HealthyEdgeInterval != nil {
		in, out := &in.HealthyEdgeInterval, &out.HealthyEdgeInterval
		*out = new(metav1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheck.
func (in *HealthCheck) DeepCopy() *HealthCheck {
	if in == nil {
		return nil
	}
	out := new(HealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckHTTP) DeepCopyInto(out *HealthCheckHTTP) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]HeaderValueOption, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExpectedStatuses != nil {
		in, out := &in.ExpectedStatuses, &out.ExpectedStatuses
		*out = make([]Int64Range, len(*in))
		copy(*out, *in)
	}
	if in.RetriableStatuses != nil {
		in, out := &in.RetriableStatuses, &out.RetriableStatuses
		*out = make([]Int64Range, len(*in))
		copy(*out, *in)
	}
	if in.CodecClientType != nil {
		in, out := &in.CodecClientType, &out.CodecClientType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckHTTP.
func (in *HealthCheckHTTP) DeepCopy() *HealthCheckHTTP {
	if in == nil {
		return nil
	}
	out := new(HealthCheckHTTP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRewrite) DeepCopyInto(out *HostRewrite) {
	*out = *in
	if in.Preserve != nil {
		in, out := &in.Preserve, &out.Preserve
		*out = new(bool)
		**out = **in
	}
	if in.Rewrite != nil {
		in, out := &in.Rewrite, &out.Rewrite
		*out = new(string)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(HostRewriteRegex)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRewrite.
func (in *HostRewrite) DeepCopy() *HostRewrite {
	if in == nil {
		return nil
	}
	out := new(HostRewrite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRewriteRegex) DeepCopyInto(out *HostRewriteRegex) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRewriteRegex.
func (in *HostRewriteRegex) DeepCopy() *HostRewriteRegex {
	if in == nil {
		return nil
	}
	out := new(HostRewriteRegex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Int64Range) DeepCopyInto(out *Int64Range) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Int64Range.
func (in *Int64Range) DeepCopy() *Int64Range {
	if in == nil {
		return nil
	}
	out := new(Int64Range)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LeastRequestLB) DeepCopyInto(out *LeastRequestLB) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LeastRequestLB.
func (in *LeastRequestLB) DeepCopy() *LeastRequestLB {
	if in == nil {
		return nil
	}
	out := new(LeastRequestLB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancing) DeepCopyInto(out *LoadBalancing) {
	*out = *in
	if in.RoundRobin != nil {
		in, out := &in.RoundRobin, &out.RoundRobin
		*out = new(RoundRobinLB)
		**out = **in
	}
	if in.LeastRequest != nil {
		in, out := &in.LeastRequest, &out.LeastRequest
		*out = new(LeastRequestLB)
		**out = **in
	}
	if in.RingHash != nil {
		in, out := &in.RingHash, &out.RingHash
		*out = new(RingHashLB)
		**out = **in
	}
	if in.Maglev != nil {
		in, out := &in.Maglev, &out.Maglev
		*out = new(MaglevLB)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancing.
func (in *LoadBalancing) DeepCopy() *LoadBalancing {
	if in == nil {
		return nil
	}
	out := new(LoadBalancing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaglevLB) DeepCopyInto(out *MaglevLB) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaglevLB.
func (in *MaglevLB) DeepCopy() *MaglevLB {
	if in == nil {
		return nil
	}
	out := new(MaglevLB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Namespace) DeepCopyInto(out *Namespace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Namespace.
func (in *Namespace) DeepCopy() *Namespace {
	if in == nil {
		return nil
	}
	out := new(Namespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Namespace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceList) DeepCopyInto(out *NamespaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Namespace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceList.
func (in *NamespaceList) DeepCopy() *NamespaceList {
	if in == nil {
		return nil
	}
	out := new(NamespaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceSpec) DeepCopyInto(out *NamespaceSpec) {
	*out = *in
	if in.ParentID != nil {
		in, out := &in.ParentID, &out.ParentID
		*out = new(string)
		**out = **in
	}
	if in.RefID != nil {
		in, out := &in.RefID, &out.RefID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceSpec.
func (in *NamespaceSpec) DeepCopy() *NamespaceSpec {
	if in == nil {
		return nil
	}
	out := new(NamespaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetection) DeepCopyInto(out *OutlierDetection) {
	*out = *in
	if in.Consecutive5Xx != nil {
		in, out := &in.Consecutive5Xx, &out.Consecutive5Xx
		*out = new(uint32)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(uint32)
		**out = **in
	}
	if in.EnforcingConsecutive5Xx != nil {
		in, out := &in.EnforcingConsecutive5Xx, &out.EnforcingConsecutive5Xx
		*out = new(uint32)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(uint32)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(uint32)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(uint32)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(uint32)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(uint32)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(uint32)
		**out = **in
	}
	if in.ConsecutiveLocalOriginFailure != nil {
		in, out := &in.ConsecutiveLocalOriginFailure, &out.ConsecutiveLocalOriginFailure
		*out = new(uint32)
		**out = **in
	}
	if in.EnforcingConsecutiveLocalOriginFailure != nil {
		in, out := &in.EnforcingConsecutiveLocalOriginFailure, &out.EnforcingConsecutiveLocalOriginFailure
		*out = new(uint32)
		**out = **in
	}
	if in.EnforcingLocalOriginSuccessRate != nil {
		in, out := &in.EnforcingLocalOriginSuccessRate, &out.EnforcingLocalOriginSuccessRate
		*out = new(uint32)
		**out = **in
	}
	if in.FailurePercentageThreshold != nil {
		in, out := &in.FailurePercentageThreshold, &out.FailurePercentageThreshold
		*out = new(uint32)
		**out = **in
	}
	if in.EnforcingFailurePercentage != nil {
		in, out := &in.EnforcingFailurePercentage, &out.EnforcingFailurePercentage
		*out = new(uint32)
		**out = **in
	}
	if in.EnforcingFailurePercentageLocalOrigin != nil {
		in, out := &in.EnforcingFailurePercentageLocalOrigin, &out.EnforcingFailurePercentageLocalOrigin
		*out = new(uint32)
		**out = **in
	}
	if in.FailurePercentageMinimumHosts != nil {
		in, out := &in.FailurePercentageMinimumHosts, &out.FailurePercentageMinimumHosts
		*out = new(uint32)
		**out = **in
	}
	if in.FailurePercentageRequestVolume != nil {
		in, out := &in.FailurePercentageRequestVolume, &out.FailurePercentageRequestVolume
		*out = new(uint32)
		**out = **in
	}
	if in.MaxEjectionTime != nil {
		in, out := &in.MaxEjectionTime, &out.MaxEjectionTime
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.MaxEjectionTimeJitter != nil {
		in, out := &in.MaxEjectionTimeJitter, &out.MaxEjectionTimeJitter
		*out = new(metav1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetection.
func (in *OutlierDetection) DeepCopy() *OutlierDetection {
	if in == nil {
		return nil
	}
	out := new(OutlierDetection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRewrite) DeepCopyInto(out *PathRewrite) {
	*out = *in
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(RegexPathRewrite)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRewrite.
func (in *PathRewrite) DeepCopy() *PathRewrite {
	if in == nil {
		return nil
	}
	out := new(PathRewrite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Policy) DeepCopyInto(out *Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Policy.
func (in *Policy) DeepCopy() *Policy {
	if in == nil {
		return nil
	}
	out := new(Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyAction) DeepCopyInto(out *PolicyAction) {
	*out = *in
	if in.And != nil {
		in, out := &in.And, &out.And
		*out = make([]PolicyCriteria, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Or != nil {
		in, out := &in.Or, &out.Or
		*out = make([]PolicyCriteria, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Not != nil {
		in, out := &in.Not, &out.Not
		*out = make([]PolicyCriteria, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nor != nil {
		in, out := &in.Nor, &out.Nor
		*out = make([]PolicyCriteria, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyAction.
func (in *PolicyAction) DeepCopy() *PolicyAction {
	if in == nil {
		return nil
	}
	out := new(PolicyAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyCriteria) DeepCopyInto(out *PolicyCriteria) {
	*out = *in
	if in.Accept != nil {
		in, out := &in.Accept, &out.Accept
		*out = new(bool)
		**out = **in
	}
	if in.AuthenticatedUser != nil {
		in, out := &in.AuthenticatedUser, &out.AuthenticatedUser
		*out = new(bool)
		**out = **in
	}
	if in.Claim != nil {
		in, out := &in.Claim, &out.Claim
		*out = new(PolicyCriteriaClaim)
		**out = **in
	}
	if in.CorsAllowPreflight != nil {
		in, out := &in.CorsAllowPreflight, &out.CorsAllowPreflight
		*out = new(bool)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(DeviceMatcher)
		(*in).DeepCopyInto(*out)
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(StringMatcher)
		(*in).DeepCopyInto(*out)
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(StringMatcher)
		(*in).DeepCopyInto(*out)
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = new(StringListMatcher)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(StringMatcher)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPPath != nil {
		in, out := &in.HTTPPath, &out.HTTPPath
		*out = new(StringMatcher)
		(*in).DeepCopyInto(*out)
	}
	if in.InvalidClientCertificate != nil {
		in, out := &in.InvalidClientCertificate, &out.InvalidClientCertificate
		*out = new(bool)
		**out = **in
	}
	if in.PomeriumRoutes != nil {
		in, out := &in.PomeriumRoutes, &out.PomeriumRoutes
		*out = new(bool)
		**out = **in
	}
	if in.Reject != nil {
		in, out := &in.Reject, &out.Reject
		*out = new(bool)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(StringMatcher)
		(*in).DeepCopyInto(*out)
	}
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(DateTimeMatcher)
		(*in).DeepCopyInto(*out)
	}
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = new(RecordMatcher)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyCriteria.
func (in *PolicyCriteria) DeepCopy() *PolicyCriteria {
	if in == nil {
		return nil
	}
	out := new(PolicyCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyCriteriaClaim) DeepCopyInto(out *PolicyCriteriaClaim) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyCriteriaClaim.
func (in *PolicyCriteriaClaim) DeepCopy() *PolicyCriteriaClaim {
	if in == nil {
		return nil
	}
	out := new(PolicyCriteriaClaim)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyList) DeepCopyInto(out *PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyList.
func (in *PolicyList) DeepCopy() *PolicyList {
	if in == nil {
		return nil
	}
	out := new(PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRule) DeepCopyInto(out *PolicyRule) {
	*out = *in
	if in.Allow != nil {
		in, out := &in.Allow, &out.Allow
		*out = new(PolicyAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Deny != nil {
		in, out := &in.Deny, &out.Deny
		*out = new(PolicyAction)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRule.
func (in *PolicyRule) DeepCopy() *PolicyRule {
	if in == nil {
		return nil
	}
	out := new(PolicyRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicySpec) DeepCopyInto(out *PolicySpec) {
	*out = *in
	if in.RefID != nil {
		in, out := &in.RefID, &out.RefID
		*out = new(string)
		**out = **in
	}
	if in.Enforced != nil {
		in, out := &in.Enforced, &out.Enforced
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Explanation != nil {
		in, out := &in.Explanation, &out.Explanation
		*out = new(string)
		**out = **in
	}
	if in.Remediation != nil {
		in, out := &in.Remediation, &out.Remediation
		*out = new(string)
		**out = **in
	}
	if in.PPL != nil {
		in, out := &in.PPL, &out.PPL
		*out = make([]PolicyRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rego != nil {
		in, out := &in.Rego, &out.Rego
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicySpec.
func (in *PolicySpec) DeepCopy() *PolicySpec {
	if in == nil {
		return nil
	}
	out := new(PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordMatcher) DeepCopyInto(out *RecordMatcher) {
	*out = *in
	in.StringMatcher.DeepCopyInto(&out.StringMatcher)
	in.StringListMatcher.DeepCopyInto(&out.StringListMatcher)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordMatcher.
func (in *RecordMatcher) DeepCopy() *RecordMatcher {
	if in == nil {
		return nil
	}
	out := new(RecordMatcher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Redirect) DeepCopyInto(out *Redirect) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(uint32)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
	if in.ResponseCode != nil {
		in, out := &in.ResponseCode, &out.ResponseCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Redirect.
func (in *Redirect) DeepCopy() *Redirect {
	if in == nil {
		return nil
	}
	out := new(Redirect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexPathRewrite) DeepCopyInto(out *RegexPathRewrite) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexPathRewrite.
func (in *RegexPathRewrite) DeepCopy() *RegexPathRewrite {
	if in == nil {
		return nil
	}
	out := new(RegexPathRewrite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexRouteMatch) DeepCopyInto(out *RegexRouteMatch) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexRouteMatch.
func (in *RegexRouteMatch) DeepCopy() *RegexRouteMatch {
	if in == nil {
		return nil
	}
	out := new(RegexRouteMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaders) DeepCopyInto(out *RequestHeaders) {
	*out = *in
	if in.Set != nil {
		in, out := &in.Set, &out.Set
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Remove != nil {
		in, out := &in.Remove, &out.Remove
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PassIdentity != nil {
		in, out := &in.PassIdentity, &out.PassIdentity
		*out = new(bool)
		**out = **in
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaders.
func (in *RequestHeaders) DeepCopy() *RequestHeaders {
	if in == nil {
		return nil
	}
	out := new(RequestHeaders)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceStatus) DeepCopyInto(out *ResourceStatus) {
	*out = *in
	in.ObservedAt.DeepCopyInto(&out.ObservedAt)
	if in.Error != nil {
		in, out := &in.Error, &out.Error
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceStatus.
func (in *ResourceStatus) DeepCopy() *ResourceStatus {
	if in == nil {
		return nil
	}
	out := new(ResourceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rewrite) DeepCopyInto(out *Rewrite) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(HostRewrite)
		(*in).DeepCopyInto(*out)
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(PathRewrite)
		(*in).DeepCopyInto(*out)
	}
	if in.ResponseHeaders != nil {
		in, out := &in.ResponseHeaders, &out.ResponseHeaders
		*out = make([]*RouteRewriteHeader, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RouteRewriteHeader)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rewrite.
func (in *Rewrite) DeepCopy() *Rewrite {
	if in == nil {
		return nil
	}
	out := new(Rewrite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RingHashLB) DeepCopyInto(out *RingHashLB) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RingHashLB.
func (in *RingHashLB) DeepCopy() *RingHashLB {
	if in == nil {
		return nil
	}
	out := new(RingHashLB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoundRobinLB) DeepCopyInto(out *RoundRobinLB) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoundRobinLB.
func (in *RoundRobinLB) DeepCopy() *RoundRobinLB {
	if in == nil {
		return nil
	}
	out := new(RoundRobinLB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Route) DeepCopyInto(out *Route) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Route.
func (in *Route) DeepCopy() *Route {
	if in == nil {
		return nil
	}
	out := new(Route)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Route) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteList) DeepCopyInto(out *RouteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Namespace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteList.
func (in *RouteList) DeepCopy() *RouteList {
	if in == nil {
		return nil
	}
	out := new(RouteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRewriteHeader) DeepCopyInto(out *RouteRewriteHeader) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRewriteHeader.
func (in *RouteRewriteHeader) DeepCopy() *RouteRewriteHeader {
	if in == nil {
		return nil
	}
	out := new(RouteRewriteHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteSpec) DeepCopyInto(out *RouteSpec) {
	*out = *in
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(RegexRouteMatch)
		(*in).DeepCopyInto(*out)
	}
	if in.IsTCP != nil {
		in, out := &in.IsTCP, &out.IsTCP
		*out = new(bool)
		**out = **in
	}
	if in.Websocket != nil {
		in, out := &in.Websocket, &out.Websocket
		*out = new(bool)
		**out = **in
	}
	if in.SPDY != nil {
		in, out := &in.SPDY, &out.SPDY
		*out = new(bool)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ToService != nil {
		in, out := &in.ToService, &out.ToService
		*out = new(ToService)
		(*in).DeepCopyInto(*out)
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = new(Redirect)
		(*in).DeepCopyInto(*out)
	}
	if in.Rewrite != nil {
		in, out := &in.Rewrite, &out.Rewrite
		*out = new(Rewrite)
		(*in).DeepCopyInto(*out)
	}
	if in.RequestHeaders != nil {
		in, out := &in.RequestHeaders, &out.RequestHeaders
		*out = new(RequestHeaders)
		(*in).DeepCopyInto(*out)
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.IdleTimeout != nil {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(HealthCheck)
		(*in).DeepCopyInto(*out)
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = new(OutlierDetection)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancing != nil {
		in, out := &in.LoadBalancing, &out.LoadBalancing
		*out = new(LoadBalancing)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteSpec.
func (in *RouteSpec) DeepCopy() *RouteSpec {
	if in == nil {
		return nil
	}
	out := new(RouteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePort) DeepCopyInto(out *ServicePort) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePort.
func (in *ServicePort) DeepCopy() *ServicePort {
	if in == nil {
		return nil
	}
	out := new(ServicePort)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StringListMatcher) DeepCopyInto(out *StringListMatcher) {
	*out = *in
	if in.Has != nil {
		in, out := &in.Has, &out.Has
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StringListMatcher.
func (in *StringListMatcher) DeepCopy() *StringListMatcher {
	if in == nil {
		return nil
	}
	out := new(StringListMatcher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StringMatcher) DeepCopyInto(out *StringMatcher) {
	*out = *in
	if in.Contains != nil {
		in, out := &in.Contains, &out.Contains
		*out = new(string)
		**out = **in
	}
	if in.EndsWith != nil {
		in, out := &in.EndsWith, &out.EndsWith
		*out = new(string)
		**out = **in
	}
	if in.StartsWith != nil {
		in, out := &in.StartsWith, &out.StartsWith
		*out = new(string)
		**out = **in
	}
	if in.Is != nil {
		in, out := &in.Is, &out.Is
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StringMatcher.
func (in *StringMatcher) DeepCopy() *StringMatcher {
	if in == nil {
		return nil
	}
	out := new(StringMatcher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLS) DeepCopyInto(out *TLS) {
	*out = *in
	if in.Upstream != nil {
		in, out := &in.Upstream, &out.Upstream
		*out = new(UpstreamTLS)
		(*in).DeepCopyInto(*out)
	}
	if in.Downstream != nil {
		in, out := &in.Downstream, &out.Downstream
		*out = new(DownstreamTLS)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLS.
func (in *TLS) DeepCopy() *TLS {
	if in == nil {
		return nil
	}
	out := new(TLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ToService) DeepCopyInto(out *ToService) {
	*out = *in
	in.Port.DeepCopyInto(&out.Port)
	if in.UseServiceProxy != nil {
		in, out := &in.UseServiceProxy, &out.UseServiceProxy
		*out = new(bool)
		**out = **in
	}
	if in.UseTLS != nil {
		in, out := &in.UseTLS, &out.UseTLS
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ToService.
func (in *ToService) DeepCopy() *ToService {
	if in == nil {
		return nil
	}
	out := new(ToService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpstreamTLS) DeepCopyInto(out *UpstreamTLS) {
	*out = *in
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.CA != nil {
		in, out := &in.CA, &out.CA
		*out = new(string)
		**out = **in
	}
	if in.SkipVerify != nil {
		in, out := &in.SkipVerify, &out.SkipVerify
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpstreamTLS.
func (in *UpstreamTLS) DeepCopy() *UpstreamTLS {
	if in == nil {
		return nil
	}
	out := new(UpstreamTLS)
	in.DeepCopyInto(out)
	return out
}
